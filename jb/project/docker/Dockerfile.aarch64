# NOTE: This Dockerfile is meant to be used from the mkdocker_aarch64.sh script.

# Pull a concrete version of Linux that does NOT recieve updates after it's
# been created.  This is so that the image is as stable as possible to make
# image creation reproducible.
# NB: this also means there may be no security-related fixes there, need to
# move the version to the next manually.
FROM arm64v8/centos:7

# Install the necessary build tools
RUN yum -y update && \
    yum -y install centos-release-scl; \
    yum -y install devtoolset-10-10.1-0.el7 && \
    yum -y install \
        alsa-devel \
        alsa-lib-devel \
        autoconf \
        automake \
        bzip2 \
        cups-devel \
        file \
        fontconfig-devel \
        freetype-devel \
        giflib-devel \
        git \
        libjpeg62-devel \
        libstdc++-devel \
        libtool \
        libXi-devel \
        libXrandr-devel \
        libXrender-devel \
        libXt-devel \
        libXtst-devel \
        make \
        rsync \
        tar \
        unzip \
        xorg-x11-devel \
        zip \
        wayland-devel-1.15.0-1.el7 && \
   yum -y clean all && \
   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ENV PATH="/opt/rh/devtoolset-10/root/usr/bin:${PATH}"
ENV LD_LIBRARY_PATH="/opt/rh/devtoolset-10/root/usr/lib64:/opt/rh/devtoolset-10/root/usr/lib:/opt/rh/devtoolset-10/root/usr/lib64/dyninst:/opt/rh/devtoolset-10/root/usr/lib/dyninst:/opt/rh/devtoolset-10/root/usr/lib64:/opt/rh/devtoolset-10/root/usr/lib"
ENV PKG_CONFIG_PATH="/opt/rh/devtoolset-10/root/usr/lib64/pkgconfig"

# Set up boot JDK for building
COPY boot_jdk.tar.gz /jdk17/
RUN cd /jdk17 && tar --strip-components=1 -xzf boot_jdk.tar.gz && rm /jdk17/boot_jdk.tar.gz
ENV BOOT_JDK=/jdk17

RUN git config --global user.email "teamcity@jetbrains.com" && \
    git config --global user.name "builduser"
